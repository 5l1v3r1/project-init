#!/usr/bin/env ion

mkdir -p target/completions
export PATH=/home/vanessa/.cargo/bin:$PATH
cargo build --release
cross build --target=x86_64-pc-windows-gnu --release &&
cross build --target=armv7-unknown-linux-gnueabihf --release &&
cross build --target=x86_64-unknown-freebsd --release &&
cross build --target=x86_64-unknown-netbsd --release &&
cross build --target=sparc64-unknown-linux-gnu --release

cargo release --no-dev-version -l @args[1..]

# set path to include go binaries
export GITHUB_TOKEN=$(cat .git-token)

let tag = $(git describe --tags)

github-release release -u vmchale -r project-init --tag $tag --name @args[1..]

github-release upload --user vmchale --repo project-init --tag $tag --name "pi-x86_64-linux-gnu" --file target/release/pi
github-release upload --user vmchale --repo project-init --tag $tag --name "pi-armv7-linux-gnueabihf" --file target/armv7-unknown-linux-gnueabihf/release/pi
github-release upload --user vmchale --repo project-init --tag $tag --name "pi-x86_64-pc-windows.exe" --file target/x86_64-pc-windows-gnu/release/pi.exe
github-release upload --user vmchale --repo project-init --tag $tag --name "pi-x86_64-freebsd" --file target/x86_64-unknown-freebsd/release/pi
github-release upload --user vmchale --repo project-init --tag $tag --name "pi-x86_64-linux-musl" --file target/x86_64-unknown-linux-musl/release/pi
github-release upload --user vmchale --repo project-init --tag $tag --name "pi-x86_64-netbsd" --file target/x86_64-unknown-netbsd/release/pi
github-release upload --user vmchale --repo project-init --tag $tag --name "pi-sparc64-linux-gnu" --file target/sparc64-unknown-linux-gnu/release/pi
