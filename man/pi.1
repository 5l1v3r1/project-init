.\" Automatically generated by Pandoc 2.2.2
.\"
.TH "pi (1)" "" "" "" ""
.hy
.SH NAME
.PP
pi \- initialize projects from mustache templates
.SH SYNOPSIS
.PP
pi new <language> <directory> [\[en]force]
.PP
pi init <template> <directory> [\[en]force]
.PP
pi git <username>/<repo> [\[en]force]
.SH DESCRIPTION
.PP
\f[B]pi\f[] is a command\-line tool that helps you start new projects.
It can generate new projects either from mustache templates or from the
builtin templates.
.SH OPTIONS
.TP
.B \f[B]\-h\f[], \f[B]\[en]help\f[]
Display help
.RS
.RE
.TP
.B \f[B]\-f\f[], \f[B]\[en]force\f[]
Initialize project even if the directory already exists
.RS
.RE
.SH CONFIGURATION
.PP
Configuration files are located in $HOME/.pi.toml and are configured
using TOML.
.PP
\f[B]Keys available:\f[]
.PP
\f[B]license\f[] \- The preferred license for new projects.
Currently supported licenses are BSD, BSD3, MIT, GPL, and
AllRightsReserved.
.PP
\f[B]version_control\f[] \- The preferred version control for new
projects.
The relevant executable must be on your PATH.
Currently supported are git, mercurial, darcs, and pijul.
.PP
\f[B]version\f[] \- String such as \[lq]0.1.0.0\[rq] or \[lq]0.1.0\[rq]
representing your preferred versioning scheme.
.PP
\f[B]author.name\f[]
.PP
\f[B]author.email\f[]
.PP
\f[B]author.github_username\f[]
.SH USER TEMPLATES
.PP
Templates are configured using mustache.
Templates placed in a user's $HOME/.pi_templates will be available to
her anywhere.
.PP
For sample templates, see:
.PP
https://github.com/vmchale/pi\-templates
.SH BUILTIN TEMPLATES
.PP
Project templates for Julia, Rust, Idris, Elm, Vimscript, Python,
Haskell, Miso , and ATS are included by default.
There is also a `plain' template which just contains a license and a
readme.
.SH EXAMPLES
.IP
.nf
\f[C]
pi\ new\ idris\ permutations
\f[]
.fi
.IP
.nf
\f[C]
pi\ init\ ruby\ blog
\f[]
.fi
.IP
.nf
\f[C]
pi\ git\ vmchale/haskell\-ats\ fast\-package
\f[]
.fi
.SH AUTHORS
Vanessa McHale.
